(()=>{"use strict";const e={"x player":"x","o player":"o"};let t=Object.keys(e)[0],l=!1,r=new Array(5).fill(null).map((e=>new Array(5).fill(null)));const n=document.querySelector(".field"),o=document.querySelector(".currPlayer"),i=document.querySelector(".reload"),d=document.querySelector(".winner"),u=()=>{n.innerHTML="",n.setAttribute("style","grid-template-columns: repeat(5, 50px)");for(let e=0;e<25;e++){const e=document.createElement("div");e.classList.add("cell"),n.appendChild(e)}Array.from(n.children).forEach(((e,t)=>{var l,n;e.setAttribute("cellX",String(t%5)),e.setAttribute("cellY",String(Math.floor(t/5))),e.innerHTML=null!==(n=null===(l=null==r?void 0:r[Math.floor(t/5)])||void 0===l?void 0:l[t%5])&&void 0!==n?n:null}))};n.addEventListener("click",(n=>{if(l)return;const i=n.target;if(i.classList.contains("cell")){const[n,v]=[Number(i.getAttribute("cellX")),Number(i.getAttribute("cellY"))];if(((e,t,l)=>{var r,n;return null!==(n=null===(r=null==l?void 0:l[e])||void 0===r?void 0:r[t])&&void 0!==n?n:null})(v,n,r))return;i.innerHTML=e[t],u=n,(c=r)[v][u]=e[t],r=c,((l,r,n)=>{var o,i,d,u;const c={h:0,v:0,dtop:0,dbot:0},v={h:0,v:0,dtop:0,dbot:0};for(let a=-2;a<3;a++){if((null===(o=null==n?void 0:n[r])||void 0===o?void 0:o[l-a])===e[t]){if(c.h++,c.h>=3)return!0;c.h>v.h&&v.h++}else c.h=0;if((null===(i=null==n?void 0:n[r-a])||void 0===i?void 0:i[l])===e[t]){if(c.v++,c.v>=3)return!0;c.v>v.v&&v.v++}else c.v=0;if((null===(d=null==n?void 0:n[r-a])||void 0===d?void 0:d[l-a])===e[t]){if(c.dtop++,c.dtop>=3)return!0;c.dtop>v.dtop&&v.dtop++}else c.dtop=0;if((null===(u=null==n?void 0:n[r-a])||void 0===u?void 0:u[l- -1*a])===e[t]){if(c.dbot++,c.dbot>=3)return!0;c.dbot>v.dbot&&v.dbot++}else c.dbot=0;if(3===Math.max(...Object.values(v)))return!0}return!1})(n,v,r)?(l=!0,d.innerHTML=t+" win!"):(e=>{for(let t=0;t<5;t++)for(let l=0;l<5;l++)if(!e[t][l])return!1;return!0})(r)&&(d.innerHTML="Ничья"),t=t===Object.keys(e)[0]?Object.keys(e)[1]:Object.keys(e)[0],o.innerHTML=t+"'s move"}var u,c})),u(),i.onclick=()=>{Array.from(n.children).map((e=>e.innerHTML="")),r=new Array(5).fill(null).map((e=>new Array(5).fill(null))),l=!1,t=Object.keys(e)[0],o.innerHTML="",d.innerHTML="",u()}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,